{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/pages/Main/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./Main.scss\";\nimport axios from \"axios\";\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport Comments from \"../../components/CommentSection/CommentSection\";\nimport Other from \"../../components/OtherVideos/Other\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"c8f93081-09f2-4de0-baa5-ffe6fbc33fcf\";\nconst apiUrl = \"https://project-2-api.herokuapp.com\";\nfunction Main() {\n  _s();\n  const [videoData, setVideoData] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const navigate = useNavigate();\n  const {\n    videoId\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/videos?api_key=${apiKey}`);\n        if (response.data.length > 0) {\n          setVideoData(response.data);\n          if (videoId) {\n            const selected = response.data.find(video => video.id === videoId);\n            setSelectedVideo(selected || response.data[0]);\n          } else {\n            setSelectedVideo(response.data[0]); // Select the first video by default\n          }\n        } else {\n          console.error(\"No videos found in the response.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [videoId]);\n  useEffect(() => {\n    const fetchSelectedVideoDetails = async () => {\n      if (selectedVideo) {\n        try {\n          const response = await axios.get(`${apiUrl}/videos/${selectedVideo.id}?api_key=${apiKey}`);\n          if (response.data) {\n            setSelectedVideo(response.data);\n          } else {\n            console.error(\"No details found for the selected video.\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching selected video details:\", error);\n        }\n      }\n    };\n    fetchSelectedVideoDetails();\n  }, [selectedVideo]);\n  const handleSelectVideo = selectedVideo => {\n    // Update the URL when a video is selected\n    navigate(`/videos/${selectedVideo.id}`);\n    // setSelectedVideo(selectedVideo);\n  };\n  const addComment = newComment => {\n    setSelectedVideo(prevSelectedVideo => ({\n      ...prevSelectedVideo,\n      comments: [...prevSelectedVideo.comments, newComment]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(VideoSection, {\n      selectedVideo: selectedVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-eq\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main-eq__all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-eq__section\",\n          children: [/*#__PURE__*/_jsxDEV(VideoInfo, {\n            videoData: selectedVideo || videoData[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            videoData: selectedVideo,\n            onAddComment: addComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Other, {\n          videoData: videoData,\n          onSelect: handleSelectVideo,\n          selectedVideo: selectedVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"XxsJrpPJSKYh5yLG7zzAW+KQ1gY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","VideoSection","VideoInfo","Comments","Other","jsxDEV","_jsxDEV","apiKey","apiUrl","Main","_s","videoData","setVideoData","selectedVideo","setSelectedVideo","navigate","videoId","fetchData","response","get","data","length","selected","find","video","id","console","error","fetchSelectedVideoDetails","handleSelectVideo","addComment","newComment","prevSelectedVideo","comments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddComment","onSelect","_c","$RefreshReg$"],"sources":["/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/pages/Main/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./Main.scss\"\nimport axios from \"axios\";\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport Comments from \"../../components/CommentSection/CommentSection\";\nimport Other from \"../../components/OtherVideos/Other\";\n\nconst apiKey = \"c8f93081-09f2-4de0-baa5-ffe6fbc33fcf\";\nconst apiUrl = \"https://project-2-api.herokuapp.com\";\n\n\nfunction Main() {\n    const [videoData, setVideoData] = useState([]);\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const navigate = useNavigate();\n    const { videoId } = useParams();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get(`${apiUrl}/videos?api_key=${apiKey}`);\n\n                if (response.data.length > 0) {\n                    setVideoData(response.data);\n\n                    if (videoId) {\n                        const selected = response.data.find(video => video.id === videoId);\n                        setSelectedVideo(selected || response.data[0]);\n                    } else {\n                        setSelectedVideo(response.data[0]); // Select the first video by default\n                    }\n                } else {\n                    console.error(\"No videos found in the response.\");\n                }\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        };\n        fetchData();\n    }, [videoId]);\n\n    useEffect(() => {\n        const fetchSelectedVideoDetails = async () => {\n            if (selectedVideo) {\n                try {\n                    const response = await axios.get(`${apiUrl}/videos/${selectedVideo.id}?api_key=${apiKey}`);\n\n                    if (response.data) {\n                        setSelectedVideo(response.data);\n                    } else {\n                        console.error(\"No details found for the selected video.\");\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching selected video details:\", error);\n                }\n            }\n        };\n\n        fetchSelectedVideoDetails();\n    }, [selectedVideo]);\n\n    const handleSelectVideo = (selectedVideo) => {\n        // Update the URL when a video is selected\n        navigate(`/videos/${selectedVideo.id}`);\n        // setSelectedVideo(selectedVideo);\n    };\n\n    const addComment = (newComment) => {\n        setSelectedVideo((prevSelectedVideo) => ({\n            ...prevSelectedVideo,\n            comments: [...prevSelectedVideo.comments, newComment],\n        }));\n    };\n    \n    return (\n        <main className='main'>\n            <VideoSection selectedVideo={selectedVideo} />\n            <div className='main-eq'>\n                <section className='main-eq__all'>\n                    <div className='main-eq__section'>\n                        <VideoInfo videoData={selectedVideo || videoData[0]} />\n                        <Comments videoData={selectedVideo} onAddComment={addComment} />\n                    </div>\n                    <Other videoData={videoData} onSelect={handleSelectVideo} selectedVideo={selectedVideo} />\n                </section>\n            </div>\n        </main>\n    );\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
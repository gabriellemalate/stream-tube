{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/pages/Main/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./Main.scss\";\nimport axios from \"axios\";\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport Comments from \"../../components/CommentSection/CommentSection\";\nimport Other from \"../../components/OtherVideos/Other\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = \"c8f93081-09f2-4de0-baa5-ffe6fbc33fcf\";\nconst apiUrl = \"https://project-2-api.herokuapp.com\";\nfunction Main() {\n  _s();\n  const [videoData, setVideoData] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [setDuration] = useState(0);\n  const navigate = useNavigate();\n  const {\n    videoId\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/videos?api_key=${apiKey}`);\n        if (response.data.length > 0) {\n          setVideoData(response.data);\n          const selected = videoId && response.data.find(video => video.id === videoId);\n          setSelectedVideo(selected || response.data[0]);\n        } else {\n          console.error(\"No videos found in the response.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [videoId]);\n  useEffect(() => {\n    const fetchSelectedVideoDetails = async () => {\n      if (selectedVideo) {\n        try {\n          const response = await axios.get(`${apiUrl}/videos/${selectedVideo.id}?api_key=${apiKey}`);\n          if (response.data) {\n            const {\n              duration\n            } = response.data;\n            setDuration(duration);\n            setSelectedVideo(response.data);\n          } else {\n            console.error(\"No details found for the selected video.\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching selected video details:\", error);\n        }\n      }\n    };\n    if (selectedVideo && !selectedVideo.comments) {\n      fetchSelectedVideoDetails();\n    }\n  }, [selectedVideo]);\n  const addComment = newComment => {\n    setSelectedVideo(prevSelectedVideo => ({\n      ...prevSelectedVideo,\n      comments: [...prevSelectedVideo.comments, newComment]\n    }));\n  };\n  const handleSelectVideo = selectedVideo => {\n    // update URL when a video is selected\n    navigate(`/videos/${selectedVideo.id}`);\n    setSelectedVideo(selectedVideo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(VideoSection, {\n      selectedVideo: selectedVideo,\n      duration: selectedVideo ? selectedVideo.duration : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-eq\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main-eq__all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-eq__section\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"main-eq__section-load\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(VideoInfo, {\n              videoData: selectedVideo || videoData[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Comments, {\n              videoData: selectedVideo,\n              onAddComment: addComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Other, {\n          videoData: videoData,\n          onSelect: handleSelectVideo,\n          selectedVideo: selectedVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"D1RYmEWspX3GE/WlIp0ZpSy/fDQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","VideoSection","VideoInfo","Comments","Other","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","apiUrl","Main","_s","videoData","setVideoData","selectedVideo","setSelectedVideo","loading","setLoading","setDuration","navigate","videoId","fetchData","response","get","data","length","selected","find","video","id","console","error","fetchSelectedVideoDetails","duration","comments","addComment","newComment","prevSelectedVideo","handleSelectVideo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddComment","onSelect","_c","$RefreshReg$"],"sources":["/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/pages/Main/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./Main.scss\"\nimport axios from \"axios\";\nimport VideoSection from '../../components/VideoSection/VideoSection';\nimport VideoInfo from '../../components/VideoInfo/VideoInfo';\nimport Comments from \"../../components/CommentSection/CommentSection\";\nimport Other from \"../../components/OtherVideos/Other\";\n\nconst apiKey = \"c8f93081-09f2-4de0-baa5-ffe6fbc33fcf\";\nconst apiUrl = \"https://project-2-api.herokuapp.com\";\n\n\nfunction Main() {\n    const [videoData, setVideoData] = useState([]);\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [ setDuration] = useState(0); \n    const navigate = useNavigate();\n    const { videoId } = useParams();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get(`${apiUrl}/videos?api_key=${apiKey}`);\n                if (response.data.length > 0) {\n                    setVideoData(response.data);\n\n                    const selected =\n                        videoId && response.data.find((video) => video.id === videoId);\n\n                    setSelectedVideo(selected || response.data[0]);\n                } else {\n                    console.error(\"No videos found in the response.\");\n                }\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchData();\n    }, [videoId]);\n\n    useEffect(() => {\n        const fetchSelectedVideoDetails = async () => {\n            if (selectedVideo) {\n                try {\n                    const response = await axios.get(`${apiUrl}/videos/${selectedVideo.id}?api_key=${apiKey}`);\n\n                    if (response.data) {\n                        const { duration } = response.data;\n                        setDuration(duration);\n                        setSelectedVideo(response.data);\n                    } else {\n                        console.error(\"No details found for the selected video.\");\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching selected video details:\", error);\n                }\n            }\n        };\n\n\n        if (selectedVideo && !selectedVideo.comments) {\n            fetchSelectedVideoDetails();\n        }\n    }, [selectedVideo]);\n\n    const addComment = (newComment) => {\n        setSelectedVideo((prevSelectedVideo) => ({\n            ...prevSelectedVideo,\n            comments: [...prevSelectedVideo.comments, newComment],\n        }));\n    };\n\n    const handleSelectVideo = (selectedVideo) => {\n        // update URL when a video is selected\n        navigate(`/videos/${selectedVideo.id}`);\n        setSelectedVideo(selectedVideo);\n    };\n\n    return (\n        <main className=\"main\">\n            <VideoSection selectedVideo={selectedVideo} duration={selectedVideo ? selectedVideo.duration : 0} />\n            <div className=\"main-eq\">\n                <section className=\"main-eq__all\">\n                    <div className=\"main-eq__section\">\n                        {loading ? (\n                            <h2 className=\"main-eq__section-load\">Loading...</h2>\n                        ) : (\n                            <>\n                                <VideoInfo videoData={selectedVideo || videoData[0]} />\n                                <Comments\n                                    videoData={selectedVideo}\n                                    onAddComment={addComment}\n                                />\n                            </>\n                        )}\n                    </div>\n                    <Other\n                        videoData={videoData}\n                        onSelect={handleSelectVideo}\n                        selectedVideo={selectedVideo}\n                    />\n                </section>\n            </div>\n        </main>\n    );\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
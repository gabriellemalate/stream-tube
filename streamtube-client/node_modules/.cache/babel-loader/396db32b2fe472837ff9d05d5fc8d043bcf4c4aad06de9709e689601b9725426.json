{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Desktop/gabrielle-malate-brainflix/src/components/VideoVid/VideoVid.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./VideoVid.scss\";\nimport { apiKey } from \"../../pages/Main/Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoVid({\n  selectedVideo,\n  isPlaying\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const videoUrlWithApiKey = selectedVideo ? `${selectedVideo.video}?api_key=${apiKey}` : \"\";\n  useEffect(() => {\n    const video = videoRef.current;\n    if (isPlaying) {\n      video.play();\n    } else {\n      video.pause();\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    className: \"video-vid\",\n    poster: selectedVideo ? selectedVideo.image : \"\",\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      className: \"video-vid__source\",\n      src: videoUrlWithApiKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoVid, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = VideoVid;\nVideoVid.propTypes = {\n  selectedVideo: PropTypes.object,\n  isPlaying: PropTypes.bool\n};\nexport default VideoVid;\nvar _c;\n$RefreshReg$(_c, \"VideoVid\");","map":{"version":3,"names":["React","useRef","useEffect","PropTypes","apiKey","jsxDEV","_jsxDEV","VideoVid","selectedVideo","isPlaying","_s","videoRef","videoUrlWithApiKey","video","current","play","pause","ref","autoPlay","className","poster","image","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","object","bool","$RefreshReg$"],"sources":["/Users/gabrielle/Desktop/gabrielle-malate-brainflix/src/components/VideoVid/VideoVid.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./VideoVid.scss\"\n\nimport { apiKey } from \"../../pages/Main/Main\";\n\nfunction VideoVid({ selectedVideo, isPlaying }) {\n    const videoRef = useRef(null);\n    const videoUrlWithApiKey = selectedVideo\n        ? `${selectedVideo.video}?api_key=${apiKey}`\n        : \"\";\n\n    useEffect(() => {\n        const video = videoRef.current;\n\n        if (isPlaying) {\n            video.play();\n        } else {\n            video.pause();\n        }\n    }, [isPlaying]);\n\n    return (\n        <video ref={videoRef} autoPlay className='video-vid' poster={selectedVideo ? selectedVideo.image : \"\"}>\n            <source className='video-vid__source' src={videoUrlWithApiKey} />\n        </video>\n    );\n}\n\nVideoVid.propTypes = {\n    selectedVideo: PropTypes.object,\n    isPlaying: PropTypes.bool,\n};\n\nexport default VideoVid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,iBAAiB;AAExB,SAASC,MAAM,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,kBAAkB,GAAGJ,aAAa,GACjC,GAAEA,aAAa,CAACK,KAAM,YAAWT,MAAO,EAAC,GAC1C,EAAE;EAERF,SAAS,CAAC,MAAM;IACZ,MAAMW,KAAK,GAAGF,QAAQ,CAACG,OAAO;IAE9B,IAAIL,SAAS,EAAE;MACXI,KAAK,CAACE,IAAI,CAAC,CAAC;IAChB,CAAC,MAAM;MACHF,KAAK,CAACG,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,oBACIH,OAAA;IAAOW,GAAG,EAAEN,QAAS;IAACO,QAAQ;IAACC,SAAS,EAAC,WAAW;IAACC,MAAM,EAAEZ,aAAa,GAAGA,aAAa,CAACa,KAAK,GAAG,EAAG;IAAAC,QAAA,eAClGhB,OAAA;MAAQa,SAAS,EAAC,mBAAmB;MAACI,GAAG,EAAEX;IAAmB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEhB;AAACjB,EAAA,CArBQH,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAuBjBA,QAAQ,CAACsB,SAAS,GAAG;EACjBrB,aAAa,EAAEL,SAAS,CAAC2B,MAAM;EAC/BrB,SAAS,EAAEN,SAAS,CAAC4B;AACzB,CAAC;AAED,eAAexB,QAAQ;AAAC,IAAAqB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/VideoControls/VideoControls.js\",\n  _s = $RefreshSig$();\n// VideoControls.js\nimport React, { useState, useEffect } from \"react\";\nimport Play from \"../../assets/images/icons/play.svg\";\nimport Pause from \"../../assets/images/icons/pause.svg\";\nimport Expand from \"../../assets/images/icons/fullscreen.svg\";\nimport Volume from \"../../assets/images/icons/volume_off.svg\";\nimport \"./VideoControls.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoControls({\n  selectedVideo,\n  duration\n}) {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const formatTime = timeInSeconds => {\n    if (typeof timeInSeconds !== 'number' || isNaN(timeInSeconds)) {\n      return '0:00';\n    }\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  // handle play/pause button click\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      video.pause();\n    } else {\n      video.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // handle time update during video playback\n  const handleTimeUpdate = () => {\n    setCurrentTime(video.currentTime);\n  };\n\n  // attach event listeners when the component mounts\n  useEffect(() => {\n    // function to handle when the video can start playing\n    const handleCanPlay = () => {\n      if (isPlaying) {\n        video.play();\n      }\n    };\n    video.addEventListener('canplay', handleCanPlay);\n    video.addEventListener('timeupdate', handleTimeUpdate);\n    return () => {\n      video.removeEventListener('canplay', handleCanPlay);\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"video-controls__play\",\n      onClick: handlePlayPause,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"video-controls__play-icon\",\n        src: isPlaying ? Pause : Play,\n        alt: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls__eq\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-controls__scrub\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"video-controls__scrubber\",\n          value: currentTime,\n          max: duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-controls__scrub-time\",\n          children: `${formatTime(currentTime)}/${formatTime(duration)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls__right\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"video-controls__right-link\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"video-controls__right-expand\",\n          src: Expand,\n          alt: \"Full Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"video-controls__right-link\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"video-controls__right-volume\",\n          src: Volume,\n          alt: \"Volume On/Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoControls, \"63YmirNGmwIZDyMkQQtbFBocB7Y=\");\n_c = VideoControls;\nexport default VideoControls;\nvar _c;\n$RefreshReg$(_c, \"VideoControls\");","map":{"version":3,"names":["React","useState","useEffect","Play","Pause","Expand","Volume","jsxDEV","_jsxDEV","VideoControls","selectedVideo","duration","_s","isPlaying","setIsPlaying","currentTime","setCurrentTime","formatTime","timeInSeconds","isNaN","minutes","Math","floor","seconds","handlePlayPause","video","pause","play","handleTimeUpdate","handleCanPlay","addEventListener","removeEventListener","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","max","_c","$RefreshReg$"],"sources":["/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/VideoControls/VideoControls.js"],"sourcesContent":["// VideoControls.js\nimport React, { useState, useEffect } from \"react\";\nimport Play from \"../../assets/images/icons/play.svg\";\nimport Pause from \"../../assets/images/icons/pause.svg\";\nimport Expand from \"../../assets/images/icons/fullscreen.svg\";\nimport Volume from \"../../assets/images/icons/volume_off.svg\";\n\nimport \"./VideoControls.scss\";\n\nfunction VideoControls({ selectedVideo, duration }) {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    const formatTime = (timeInSeconds) => {\n        if (typeof timeInSeconds !== 'number' || isNaN(timeInSeconds)) {\n            return '0:00';\n        }\n        const minutes = Math.floor(timeInSeconds / 60);\n        const seconds = Math.floor(timeInSeconds % 60);\n        return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n    };\n\n    // handle play/pause button click\n    const handlePlayPause = () => {\n        if (isPlaying) {\n            video.pause();\n        } else {\n            video.play();\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    // handle time update during video playback\n    const handleTimeUpdate = () => {\n        setCurrentTime(video.currentTime);\n    };\n\n    // attach event listeners when the component mounts\n    useEffect(() => {\n\n        // function to handle when the video can start playing\n        const handleCanPlay = () => {\n            if (isPlaying) {\n                video.play();\n            }\n        };\n\n        video.addEventListener('canplay', handleCanPlay);\n        video.addEventListener('timeupdate', handleTimeUpdate);\n\n        return () => {\n            video.removeEventListener('canplay', handleCanPlay);\n            video.removeEventListener('timeupdate', handleTimeUpdate);\n        };\n    }, [isPlaying]);\n\n    return (\n        <div className='video-controls'>\n            <button className='video-controls__play' onClick={handlePlayPause}>\n                <img\n                    className='video-controls__play-icon'\n                    src={isPlaying ? Pause : Play}\n                    alt={isPlaying ? \"Pause\" : \"Play\"}\n                />\n            </button>\n            <div className='video-controls__eq'>\n                <div className='video-controls__scrub'>\n                    <input\n                        type=\"range\"\n                        className=\"video-controls__scrubber\"\n                        value={currentTime}\n                        max={duration}\n                    />\n                    <p className='video-controls__scrub-time'>{`${formatTime(currentTime)}/${formatTime(duration)}`}</p>\n                </div>\n            </div>\n            <div className='video-controls__right'>\n                <p className='video-controls__right-link'>\n                    <img className='video-controls__right-expand' src={Expand} alt=\"Full Screen\" />\n                </p>\n                <p className='video-controls__right-link'>\n                    <img className='video-controls__right-volume' src={Volume} alt=\"Volume On/Off\" />\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default VideoControls;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
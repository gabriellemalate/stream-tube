{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/VideoVid/VideoVid.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./VideoVid.scss\";\nimport { apiKey } from \"../../pages/Main/Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoVid({\n  selectedVideo,\n  isPlaying\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const videoUrlWithApiKey = selectedVideo ? `${selectedVideo.video}?api_key=${apiKey}` : \"\";\n  const [videoKey, setVideoKey] = useState(0);\n  useEffect(() => {\n    // increment the key when selectedVideo changes to force remount\n    setVideoKey(prevKey => prevKey + 1);\n  }, [selectedVideo]);\n  useEffect(() => {\n    const video = videoRef.current;\n    const playVideo = () => {\n      if (video && video.paused) {\n        video.play();\n      }\n    };\n    document.addEventListener(\"click\", playVideo);\n    return () => {\n      document.removeEventListener(\"click\", playVideo);\n    };\n  }, [videoKey]);\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video && isPlaying) {\n      const playPromise = video.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {}).catch(error => {\n          console.error(\"Auto-play was prevented:\", error);\n        });\n      }\n    } else if (video) {\n      video.pause();\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    className: \"video-vid\",\n    poster: selectedVideo ? selectedVideo.image : \"\",\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      className: \"video-vid__source\",\n      src: videoUrlWithApiKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, videoKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoVid, \"KxEIjAltNcwBguNBG9kk88g37UA=\");\n_c = VideoVid;\nVideoVid.propTypes = {\n  selectedVideo: PropTypes.object,\n  isPlaying: PropTypes.bool\n};\nexport default VideoVid;\nvar _c;\n$RefreshReg$(_c, \"VideoVid\");","map":{"version":3,"names":["React","useRef","useEffect","useState","PropTypes","apiKey","jsxDEV","_jsxDEV","VideoVid","selectedVideo","isPlaying","_s","videoRef","videoUrlWithApiKey","video","videoKey","setVideoKey","prevKey","current","playVideo","paused","play","document","addEventListener","removeEventListener","playPromise","undefined","then","catch","error","console","pause","ref","autoPlay","className","poster","image","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","object","bool","$RefreshReg$"],"sources":["/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/VideoVid/VideoVid.js"],"sourcesContent":["import React, { useRef, useEffect, useState  } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./VideoVid.scss\"\n\nimport { apiKey } from \"../../pages/Main/Main\";\n\nfunction VideoVid({ selectedVideo, isPlaying }) {\n    const videoRef = useRef(null);\n    const videoUrlWithApiKey = selectedVideo\n        ? `${selectedVideo.video}?api_key=${apiKey}`\n        : \"\";\n        const [videoKey, setVideoKey] = useState(0);\n        useEffect(() => {\n            // increment the key when selectedVideo changes to force remount\n            setVideoKey(prevKey => prevKey + 1);\n        }, [selectedVideo]);\n        useEffect(() => {\n            const video = videoRef.current;\n    \n            const playVideo = () => {\n                if (video && video.paused) {\n                    video.play();\n                }\n            };\n    \n            document.addEventListener(\"click\", playVideo);\n    \n            return () => {\n                document.removeEventListener(\"click\", playVideo);\n            };\n        }, [videoKey]);\n\n    useEffect(() => {\n        const video = videoRef.current;\n\n        if (video && isPlaying) {\n            const playPromise = video.play();\n\n            if (playPromise !== undefined) {\n                playPromise.then(() => {\n                })\n                    .catch(error => {\n                        console.error(\"Auto-play was prevented:\", error);\n                    });\n            }\n        } else if (video) {\n            video.pause();\n        }\n    }, [isPlaying]);\n\n    return (\n        <video \n        ref={videoRef} \n        key={videoKey}\n        autoPlay \n        className='video-vid' \n        poster={selectedVideo ? selectedVideo.image : \"\"}>\n            <source className='video-vid__source' src={videoUrlWithApiKey} />\n        </video>\n    );\n}\n\nVideoVid.propTypes = {\n    selectedVideo: PropTypes.object,\n    isPlaying: PropTypes.bool,\n};\n\nexport default VideoVid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAS,OAAO;AAC3D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,iBAAiB;AAExB,SAASC,MAAM,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMY,kBAAkB,GAAGJ,aAAa,GACjC,GAAEA,aAAa,CAACK,KAAM,YAAWT,MAAO,EAAC,GAC1C,EAAE;EACJ,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3CD,SAAS,CAAC,MAAM;IACZ;IACAc,WAAW,CAACC,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,CAACR,aAAa,CAAC,CAAC;EACnBP,SAAS,CAAC,MAAM;IACZ,MAAMY,KAAK,GAAGF,QAAQ,CAACM,OAAO;IAE9B,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACpB,IAAIL,KAAK,IAAIA,KAAK,CAACM,MAAM,EAAE;QACvBN,KAAK,CAACO,IAAI,CAAC,CAAC;MAChB;IACJ,CAAC;IAEDC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEJ,SAAS,CAAC;IAE7C,OAAO,MAAM;MACTG,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEL,SAAS,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAElBb,SAAS,CAAC,MAAM;IACZ,MAAMY,KAAK,GAAGF,QAAQ,CAACM,OAAO;IAE9B,IAAIJ,KAAK,IAAIJ,SAAS,EAAE;MACpB,MAAMe,WAAW,GAAGX,KAAK,CAACO,IAAI,CAAC,CAAC;MAEhC,IAAII,WAAW,KAAKC,SAAS,EAAE;QAC3BD,WAAW,CAACE,IAAI,CAAC,MAAM,CACvB,CAAC,CAAC,CACGC,KAAK,CAACC,KAAK,IAAI;UACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV;IACJ,CAAC,MAAM,IAAIf,KAAK,EAAE;MACdA,KAAK,CAACiB,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACrB,SAAS,CAAC,CAAC;EAEf,oBACIH,OAAA;IACAyB,GAAG,EAAEpB,QAAS;IAEdqB,QAAQ;IACRC,SAAS,EAAC,WAAW;IACrBC,MAAM,EAAE1B,aAAa,GAAGA,aAAa,CAAC2B,KAAK,GAAG,EAAG;IAAAC,QAAA,eAC7C9B,OAAA;MAAQ2B,SAAS,EAAC,mBAAmB;MAACI,GAAG,EAAEzB;IAAmB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,GAJhE3B,QAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKN,CAAC;AAEhB;AAAC/B,EAAA,CAtDQH,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAwDjBA,QAAQ,CAACoC,SAAS,GAAG;EACjBnC,aAAa,EAAEL,SAAS,CAACyC,MAAM;EAC/BnC,SAAS,EAAEN,SAAS,CAAC0C;AACzB,CAAC;AAED,eAAetC,QAAQ;AAAC,IAAAmC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
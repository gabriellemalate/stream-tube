{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/OtherVideos/Other.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Other.scss\";\nimport OtherOne from \"../OtherOne/OtherOne\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Other(props) {\n  _s();\n  const {\n    videoData\n  } = props;\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const handleSelectVideo = videoData => {\n    setSelectedVideo(videoData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"other\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other__all\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"other__head\",\n        children: \"NEXT  VIDEOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), videoData.map(data =>\n      /*#__PURE__*/\n      // <OtherOne key={data.id} {...data} />\n      _jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(OtherOne, {\n          videoData: data,\n          onSelect: handleSelectVideo\n        }, data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Other, \"sxgy0ooEX+Me+y0n/sMclmbujtY=\");\n_c = Other;\nexport default Other;\nvar _c;\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"names":["React","useState","OtherOne","jsxDEV","_jsxDEV","Fragment","_Fragment","Other","props","_s","videoData","selectedVideo","setSelectedVideo","handleSelectVideo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","data","onSelect","id","_c","$RefreshReg$"],"sources":["/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/OtherVideos/Other.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Other.scss\"\nimport OtherOne from \"../OtherOne/OtherOne\"\n\nfunction Other(props) {\n    const { videoData } = props;\n    const [selectedVideo, setSelectedVideo] = useState(null);\n\n    const handleSelectVideo = (videoData) => {\n        setSelectedVideo(videoData);\n    };\n\n    return (\n        <section className='other'>\n            <div className='other__all'>\n                <h3 className='other__head'>NEXT  VIDEOS</h3>\n                {videoData.map((data) => (\n                    // <OtherOne key={data.id} {...data} />\n                    <>\n                    <OtherOne key={data.id} videoData={data} onSelect={handleSelectVideo} />\n                    </>\n                ))}\n            </div>\n        </section>\n    );\n}\n\nexport default Other;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,QAAQ,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAU,CAAC,GAAGF,KAAK;EAC3B,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMY,iBAAiB,GAAIH,SAAS,IAAK;IACrCE,gBAAgB,CAACF,SAAS,CAAC;EAC/B,CAAC;EAED,oBACIN,OAAA;IAASU,SAAS,EAAC,OAAO;IAAAC,QAAA,eACtBX,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBX,OAAA;QAAIU,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5CT,SAAS,CAACU,GAAG,CAAEC,IAAI;MAAA;MAChB;MACAjB,OAAA,CAAAE,SAAA;QAAAS,QAAA,eACAX,OAAA,CAACF,QAAQ;UAAeQ,SAAS,EAAEW,IAAK;UAACC,QAAQ,EAAET;QAAkB,GAAtDQ,IAAI,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiD;MAAC,gBACtE,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAACV,EAAA,CArBQF,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAuBd,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
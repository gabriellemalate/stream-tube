{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Logo from \"../../assets/images/BrainFlix-logo.svg\";\nimport MagnifyingGlass from \"../../assets/images/icons/search.svg\";\nimport UserImage from \"../../assets/images/Mohan-muruge.jpg\";\nimport Upload from \"../../assets/images/icons/upload.svg\";\nimport \"./Header.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header(props) {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const handleBlur = () => {\n    setIsActive(false);\n    // Add your validation logic here\n    // For example, check if the textarea content is empty\n    // For simplicity, I'm using a length check as an example\n    setIsError(props.value.trim().length === 0);\n  };\n  const borderColorClass = isActive ? \"header__form-box--active\" : isError ? \"header__form-box--error\" : \"\";\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__eq\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"../../../public/index.html\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"header__logo\",\n          src: Logo,\n          alt: \"BrainFlix Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__right-box-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"header__form\",\n            action: \"\",\n            method: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"header__form-magnifying-glass\",\n              src: MagnifyingGlass,\n              alt: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: `header__form-box ${borderColorClass}`,\n              type: \"search\",\n              placeholder: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header__user--mobile\",\n            src: UserImage,\n            alt: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"header__button\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header__button-eq\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"header__button-icon\",\n              alt: \"Upload Icon\",\n              src: Upload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), \"UPLOAD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"header__user--tablet\",\n          src: UserImage,\n          alt: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"DanYCvPYQExJpWG2GwUxw2sbcY0=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Logo","MagnifyingGlass","UserImage","Upload","jsxDEV","_jsxDEV","Header","props","_s","isActive","setIsActive","isError","setIsError","handleBlur","value","trim","length","borderColorClass","className","children","href","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","action","method","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/gabrielle/Desktop/flix/gabrielle-malate-brainflix/src/components/Header/Header.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Logo from \"../../assets/images/BrainFlix-logo.svg\";\nimport MagnifyingGlass from \"../../assets/images/icons/search.svg\"\nimport UserImage from \"../../assets/images/Mohan-muruge.jpg\";\nimport Upload from \"../../assets/images/icons/upload.svg\";\nimport \"./Header.scss\"\n\nfunction Header(props) {\n    const [isActive, setIsActive] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const handleBlur = () => {\n        setIsActive(false);\n        // Add your validation logic here\n        // For example, check if the textarea content is empty\n        // For simplicity, I'm using a length check as an example\n        setIsError(props.value.trim().length === 0);\n      };\n    \n      const borderColorClass = isActive\n        ? \"header__form-box--active\"\n        : isError\n        ? \"header__form-box--error\"\n        : \"\";\n\n    return (\n        <header className='header'>\n            <div className='header__eq'>\n                <a href=\"../../../public/index.html\">\n                    <img className=\"header__logo\" src={Logo} alt=\"BrainFlix Logo\" />\n                </a>\n\n                <div className='header__right'>\n                    <div className='header__right-box-user'>\n                        <form className=\"header__form\" action=\"\" method=\"\">\n                            <img className=\"header__form-magnifying-glass\" src={MagnifyingGlass} alt=\"Search\" />\n                            <textarea className={`header__form-box ${borderColorClass}`} type=\"search\" placeholder=\"Search\" />\n                        </form>\n                        <img className=\"header__user--mobile\" src={UserImage} alt=\"User\" />\n                    </div>\n                    <button className=\"header__button\">\n                        <div className=\"header__button-eq\">\n                            <img className=\"header__button-icon\" alt=\"Upload Icon\" src={Upload} />\n                            UPLOAD\n                        </div>\n                    </button>\n                    <img className=\"header__user--tablet\" src={UserImage} alt=\"User\" />\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}